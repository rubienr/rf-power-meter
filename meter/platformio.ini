[platformio]
default_envs = meter_uno, meter_leonardo, meter_mega2560, meter_mega2560_onboard_display_parallel8, meter_mega2560_onboard_display_i2c, display_uno_parallel8, display_uno_i2c

[env]
build_flags =
;-Wall   ; reason: adafruit/Adafruit-TFT-LCD
;-Werror ; reason: adafruit/Adafruit-TFT-LCD
    -std=gnu++17
    -Wl,-u,vfprintf -lprintf_flt -lm
build_src_flags =
    -Wall
    -Werror
    -std=gnu++17
    -Wl,-u,vfprintf -lprintf_flt -lm
    -DPROJECT_$PIOENV
build_src_filter =
    +<*>
    -<.git/> -<.svn/>
check_severity = low, medium, high
check_skip_packages = yes
check_tool = cppcheck
check_flags =
    cppcheck: --verbose
    --enable=warning,style,performance,portability
    --suppress=noExplicitConstructor:*/U8x8lib.h
    --suppress=uninitMemberVar:*/U8x8lib.h
    --suppress=noExplicitConstructor:*/elapsedMillis.h
    --suppress=shadowVariable:*/elapsedMillis.h
    --suppress=uninitMemberVar:*/U8g2lib.h
    --suppress=noExplicitConstructor:*/U8g2lib.h

test_port = /dev/ttyUSB0
test_speed = 115200
monitor_speed = 230400

; ----- section: dependencies

[__project_base]
build_flags =
    ${env.build_flags}
    -DSERIAL_LOG_BAUD_RATE=${env.monitor_speed}
build_src_flags =
    ${env.build_src_flags}
    -DSERIAL_LOG_BAUD_RATE=${env.monitor_speed}
lib_deps =
    ${env.lib_deps}
    pfeerick/elapsedMillis@^1.0.6
build_src_filter =
    ${env.build_src_filter}
    -<./firmware/display/>
    -<./firmware/meter/>
    -<./ui/>

[__project_base_display_i2c]
extends = __project_base
lib_deps =
    ${__project_base.lib_deps}
    olikraus/U8g2@^2.34.15
build_src_flags =
    ${__project_base.build_src_flags}
    -DDISPLAY_I2C
build_src_filter =
    ${__project_base.build_src_filter}
    +<./ui/i2c/>

[__project_base_display_parallel_8bit]
extends = __project_base
lib_deps =
    ${__project_base.lib_deps}
    adafruit/Adafruit GFX Library@^1.11.5
    prenticedavid/MCUFRIEND_kbv
build_flags =
    ${__project_base.build_flags}
    -DSUPPORT_8230
build_src_flags =
    ${__project_base.build_src_flags}
    -DDISPLAY_PARALLEL_8BIT
build_src_filter =
    ${__project_base.build_src_filter}
    +<./ui/parallel_8bit/>

[project_base_meter]
extends = __project_base
build_src_flags =
    ${__project_base.build_src_flags}
    -DPOWER_METER
build_src_filter =
    ${__project_base.build_src_filter}
    +<./firmware/meter/>

[project_base_meter_onboard_display_parallel_8bit]
extends = __project_base_display_parallel_8bit
build_src_flags =
    ${__project_base_display_parallel_8bit.build_src_flags}
    -DPOWER_METER
    -DDISPLAY_FEATURE
build_src_filter =
    ${__project_base_display_parallel_8bit.build_src_filter}
    +<./firmware/meter/>
    +<./ui/*.h>
    +<./ui/*.c>
    +<./ui/*.cpp>
    +<./ui/parallel_8bit/>

[project_base_meter_onboard_display_i2c]
extends = __project_base_display_i2c
build_src_flags =
    ${__project_base_display_i2c.build_src_flags}
    -DPOWER_METER
    -DDISPLAY_FEATURE
build_src_filter =
    ${__project_base_display_i2c.build_src_filter}
    +<./firmware/meter/>
    +<./ui/*.h>
    +<./ui/*.c>
    +<./ui/*.cpp>
    +<./ui/i2c/>

[project_base_offboard_display_i2c]
extends = __project_base_display_i2c
build_src_flags =
    ${__project_base_display_i2c.build_src_flags}
    -DOFFBOARD_DISPLAY

build_src_filter =
    ${__project_base_display_i2c.build_src_filter}
    -<./ad7887/>
    -<./ad8138/>
    -<./crc/>
    -<./settings/>
    -<./storage/>
    +<./firmware/display/>
    +<./ui/*.h>
    +<./ui/*.c>
    +<./ui/*.cpp>
    +<./ui/i2c>

[project_base_offboard_display_parallel_8bit]
extends = __project_base_display_parallel_8bit
build_src_flags =
    ${__project_base_display_parallel_8bit.build_src_flags}
    -DOFFBOARD_DISPLAY
build_src_filter =
    ${__project_base_display_parallel_8bit.build_src_filter}
    -<./ad7887/>
    -<./ad8138/>
    -<./crc/>
    -<./settings/>
    -<./storage/>
    +<./firmware/display/>
    +<./ui/*.h>
    +<./ui/*.c>
    +<./ui/*.cpp>
    +<./ui/parallel_8bit>

[test_base]
lib_deps =
    ${env.lib_deps}
    throwtheswitch/Unity@^2.5.2
test_framework = unity

; ----- section: meter targets (no on-board display)

[env:meter_micro]
extends = project_base_meter
framework = arduino
platform = atmelavr
board = micro

[env:test_meter_micro]
extends = test_base
framework = arduino
platform = atmelavr
board = micro

[env:meter_nano]
; Notes:
; - in case of arduino nano clone with m328pb flash the m328p bootloader
; - subsequently it will report the m328p ID
; - m328pb is backwards compatible with m328p
; - flash bootloader:
;   - (arduino) programmer is required: https://support.arduino.cc/hc/en-us/articles/4841602539164-Burn-the-bootloader-on-UNO-Mega-and-classic-Nano-using-another-Arduino
;   - example: ~/.arduino15/packages/arduino/tools/avrdude/x.x.x-arduinoXX/bin/avrdude -F -C~/.arduino15/packages/arduino/tools/avrdude/6.3.0-arduino17/etc/avrdude.conf -v -patmega328p -cstk500v1 -P/dev/ttyUSB0 -b19200 -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m -Uflash:w:~/.platformio/packages/framework-arduino-avr-minicore/bootloaders/optiboot_flash/bootloaders/atmega328p/16000000L/optiboot_flash_atmega328p_UART0_115200_16000000L_B5.hex
extends = project_base_meter
framework = arduino
platform = atmelavr
board = nanoatmega328new

[env:test_meter_nano]
extends = test_base
framework = arduino
platform = atmelavr
board = nanoatmega328new

[env:meter_uno]
extends = project_base_meter
framework = arduino
platform = atmelavr
board = uno

[env:test_meter_uno]
extends = test_base
framework = arduino
platform = atmelavr
board = uno

[env:meter_leonardo]
extends = project_base_meter
framework = arduino
platform = atmelavr
board = leonardo

[env:test_meter_leonardo]
extends = test_base
framework = arduino
platform = atmelavr
board = leonardo

[env:meter_mega2560]
extends = project_base_meter
framework = arduino
platform = atmelavr
board = megaatmega2560

[env:test_meter_mega2560]
extends = test_base
framework = arduino
platform = atmelavr
board = megaatmega2560

[env:test_meter_native]
platform = native
build_flags =
    -Wall
    -Werror
    -std=gnu++17
    -DENV_NATIVE
build_src_flags =
    -Wall
    -Werror
    -std=gnu++17
    -DENV_NATIVE

; ----- section: off-board display targets

[env:display_uno_parallel8]
extends = project_base_offboard_display_parallel_8bit
framework = arduino
platform = atmelavr
board = uno

[env:display_uno_i2c]
extends = project_base_offboard_display_i2c
framework = arduino
platform = atmelavr
board = uno

[env:display_mega2560_parallel8]
extends = project_base_offboard_display_parallel_8bit
framework = arduino
platform = atmelavr
board = megaatmega2560


; ----- section: on-board display targets (one controller: meter + display)
; Note: fast equi-distant sampling is highly impacted by the rather long display render time.

[env:meter_mega2560_onboard_display_parallel8]
extends = project_base_meter_onboard_display_parallel_8bit
framework = arduino
platform = atmelavr
board = megaatmega2560

[env:meter_mega2560_onboard_display_i2c]
extends = project_base_meter_onboard_display_i2c
framework = arduino
platform = atmelavr
board = megaatmega2560
